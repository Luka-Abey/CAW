[{"C:\\Users\\Johnson\\Documents\\mern\\CAW\\client\\src\\index.tsx":"1","C:\\Users\\Johnson\\Documents\\mern\\CAW\\client\\src\\App.tsx":"2","C:\\Users\\Johnson\\Documents\\mern\\CAW\\client\\src\\routes\\Routes.tsx":"3","C:\\Users\\Johnson\\Documents\\mern\\CAW\\client\\src\\routes\\RouteConstants.ts":"4","C:\\Users\\Johnson\\Documents\\mern\\CAW\\client\\src\\pages\\Home\\Home.tsx":"5","C:\\Users\\Johnson\\Documents\\mern\\CAW\\client\\src\\components\\Layout\\Layout.tsx":"6","C:\\Users\\Johnson\\Documents\\mern\\CAW\\client\\src\\pages\\FormSubmission\\FormSubmission.tsx":"7","C:\\Users\\Johnson\\Documents\\mern\\CAW\\client\\src\\pages\\SingleSubmission\\SingleSubmission.tsx":"8","C:\\Users\\Johnson\\Documents\\mern\\CAW\\client\\src\\pages\\Submissions\\Submissions.tsx":"9","C:\\Users\\Johnson\\Documents\\mern\\CAW\\client\\src\\services\\submissionService.ts":"10","C:\\Users\\Johnson\\Documents\\mern\\CAW\\client\\src\\services\\feedbackService.ts":"11","C:\\Users\\Johnson\\Documents\\mern\\CAW\\client\\src\\components\\Footer\\Footer.tsx":"12","C:\\Users\\Johnson\\Documents\\mern\\CAW\\client\\src\\components\\Wallpaper\\Wallpaper.tsx":"13","C:\\Users\\Johnson\\Documents\\mern\\CAW\\client\\src\\components\\Header\\Header.tsx":"14","C:\\Users\\Johnson\\Documents\\mern\\CAW\\client\\src\\components\\Card\\Card.tsx":"15","C:\\Users\\Johnson\\Documents\\mern\\CAW\\client\\src\\services\\config.ts":"16","C:\\Users\\Johnson\\Documents\\mern\\CAW\\client\\src\\components\\Modal\\CustomModal.tsx":"17"},{"size":231,"mtime":1610918585809,"results":"18","hashOfConfig":"19"},{"size":149,"mtime":1610918585787,"results":"20","hashOfConfig":"19"},{"size":977,"mtime":1612804039107,"results":"21","hashOfConfig":"19"},{"size":190,"mtime":1612804039101,"results":"22","hashOfConfig":"19"},{"size":8614,"mtime":1612559114731,"results":"23","hashOfConfig":"19"},{"size":1220,"mtime":1611767652079,"results":"24","hashOfConfig":"19"},{"size":10640,"mtime":1612898072715,"results":"25","hashOfConfig":"19"},{"size":3830,"mtime":1612960788763,"results":"26","hashOfConfig":"19"},{"size":2587,"mtime":1612962964428,"results":"27","hashOfConfig":"19"},{"size":988,"mtime":1612640746747,"results":"28","hashOfConfig":"19"},{"size":1308,"mtime":1612804039113,"results":"29","hashOfConfig":"19"},{"size":1112,"mtime":1611607191376,"results":"30","hashOfConfig":"19"},{"size":304,"mtime":1611607191379,"results":"31","hashOfConfig":"19"},{"size":202,"mtime":1610918585791,"results":"32","hashOfConfig":"19"},{"size":1607,"mtime":1612804039069,"results":"33","hashOfConfig":"19"},{"size":152,"mtime":1612384968086,"results":"34","hashOfConfig":"19"},{"size":1048,"mtime":1612818661212,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"gdb71q",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"51","usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Johnson\\Documents\\mern\\CAW\\client\\src\\index.tsx",[],["75","76"],"C:\\Users\\Johnson\\Documents\\mern\\CAW\\client\\src\\App.tsx",[],"C:\\Users\\Johnson\\Documents\\mern\\CAW\\client\\src\\routes\\Routes.tsx",[],"C:\\Users\\Johnson\\Documents\\mern\\CAW\\client\\src\\routes\\RouteConstants.ts",[],"C:\\Users\\Johnson\\Documents\\mern\\CAW\\client\\src\\pages\\Home\\Home.tsx",[],"C:\\Users\\Johnson\\Documents\\mern\\CAW\\client\\src\\components\\Layout\\Layout.tsx",[],"C:\\Users\\Johnson\\Documents\\mern\\CAW\\client\\src\\pages\\FormSubmission\\FormSubmission.tsx",["77","78","79","80"],"import React,  { useEffect, useState } from 'react';\r\nimport Footer from '../../components/Footer/Footer';\r\nimport CustomModal from '../../components/Modal/CustomModal';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Wallpaper from '../../components/Wallpaper/Wallpaper';\r\nimport submissionService from '../../services/submissionService';\r\nimport SendSubmissionType from '../../models/SendSubmissionType';\r\nimport { setSourceMapRange } from 'typescript';\r\n\r\nconst Submission: React.FC = () => {\r\n\r\n  const sService = new submissionService;\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => {\r\n    setShow(false)\r\n    window.location.reload()\r\n  };\r\n\r\n  const handleShow = () => setShow(true);\r\n\r\n  const [loading, setLoading] = useState(false)\r\n  const [imageArray, setImageArray] = useState(new Array<String>());\r\n  const [urlArray, setUrlArray] = useState(new Array<string>());\r\n  const [key, setKey] = useState(\"\");\r\n  const [submission, setSubmission] = useState<SendSubmissionType>({\r\n    title: \"\",\r\n    description: \"\",\r\n    benefit: \"\",\r\n    contribution: \"\",\r\n    skills: \"\",\r\n    costs: \"\",\r\n    maintenance: \"\",\r\n    other: \"\",\r\n    image: []\r\n  });\r\n\r\n  const [finalSubmission, setFinalSubmission] = useState<SendSubmissionType>({\r\n    title: \"\",\r\n    description: \"\",\r\n    benefit: \"\",\r\n    contribution: \"\",\r\n    skills: \"\",\r\n    costs: \"\",\r\n    maintenance: \"\",\r\n    other: \"\",\r\n    image: []\r\n  });\r\n\r\n  // Get triggered when finalSubmssion state is changed, \r\n  // which only happens in handleSubmit function.\r\n  // Need more rigorous error handling.\r\n  useEffect(() => {\r\n    if (finalSubmission.title !== \"\") { \r\n      sService.postSubmission(finalSubmission).catch(e => console.log(\"something went wrong: \" + e));\r\n    }\r\n }, [finalSubmission]);\r\n  \r\n  // nice-to-have show filenames when selected + a way to remove a file. \r\n  const handleInputText = (e: React.FormEvent<HTMLInputElement>) => {\r\n    const {value, name} = e.currentTarget;  \r\n    setSubmission({ ...submission, [name]: value});\r\n  }\r\n\r\n  const handleTextArea = (e: React.ChangeEvent<HTMLTextAreaElement>) => { \r\n    const {value, name} = e.currentTarget;  \r\n    setSubmission({ ...submission, [name]: value});\r\n  }\r\n\r\n  // upload files to cloudinary, return url\r\n  const uploadFile = async (file: any): Promise<string> => {\r\n    const cloudinaryData = new FormData();\r\n    cloudinaryData.append('file', file);\r\n    cloudinaryData.append('upload_preset', 'communityactiononwaste');\r\n    // send off image file\r\n    const resCloudinary = await fetch(\r\n      'https://api.cloudinary.com/v1_1/dura1eemm/image/upload',\r\n      {\r\n        method: 'POST',\r\n        body: cloudinaryData\r\n      }\r\n    )\r\n    // retrieve url\r\n    const URL = await resCloudinary.json()\r\n    const imageURL = URL.secure_url \r\n\r\n    // store the url(s) in a state variable\r\n    let tempArray = urlArray;\r\n    tempArray.push(imageURL);\r\n    setUrlArray(tempArray); \r\n    return \"done\";\r\n  }\r\n\r\n  // (e: React.ChangeEvent<HTMLInputElement>) was not working... using e: any for now\r\n  const handleImage = async (e: any) => {\r\n    const initialFileUpload = e.target.files;\r\n    // limit of file size in bytes, eg 1048576 == 1mb, 2097152 == 2mb\r\n    const fileSizeLimit = 10485760; // 10 megabyte cloudinary limit\r\n    // iterate through array of files\r\n    [...initialFileUpload].forEach((file: any) => {\r\n      const allowedExtensions = /(\\.jpg|\\.jpeg|\\.png|\\.xbm|\\.tif|\\.ico|\\.svg|\\.webp|\\.pjpeg|\\.avif)$/i; \r\n      // .exec checks if argument string contains string provided and alerts user\r\n      if (!allowedExtensions.exec(file.name)) {\r\n        alert(\"Invalid file type provided. Please try again and click Choose Files\")\r\n        file = null\r\n        resetImage()\r\n      }\r\n      // checks file size is correct and alerts user\r\n      else if (file.size > fileSizeLimit) {\r\n        alert(\"One of your files is too large. Please try again with a compressed/smaller file\")\r\n        file = null\r\n        resetImage()\r\n      }\r\n      else {\r\n        setImageArray(initialFileUpload);\r\n      }\r\n      console.log(file)\r\n    });\r\n  }\r\n  \r\n  const resetImage = () => { \r\n    let randomString = Math.random().toString(36);\r\n    setKey(randomString);\r\n  }\r\n\r\n  // validate submissions & send off the submission.\r\n  const handleSubmit = async (e: React.FormEvent<EventTarget>) => { \r\n    e.preventDefault();\r\n    setLoading(true)\r\n    for (let index = 0; index < imageArray.length; index++) {\r\n      await uploadFile(imageArray[index]);\r\n    }\r\n\r\n    // Once react finishes updating this state, it triggers a POST request in the useEffect()\r\n    setFinalSubmission(\r\n      {\r\n        title: submission.title,\r\n        description: submission.description,\r\n        benefit: submission.benefit,\r\n        contribution: submission.contribution,\r\n        skills: submission.skills,\r\n        costs: submission.costs,\r\n        maintenance: submission.maintenance,\r\n        other: submission.other,\r\n        image: urlArray\r\n      });\r\n\r\n    setSubmission(\r\n      {\r\n      title: \"\",\r\n      description: \"\",\r\n      benefit: \"\",\r\n      contribution: \"\",\r\n      skills: \"\",\r\n      costs: \"\",\r\n      maintenance: \"\",\r\n      other: \"\",\r\n      image: []\r\n      }); \r\n      \r\n      resetImage();\r\n      setLoading(false);\r\n      window.scrollTo({ top: 0, behavior: 'smooth' });\r\n      handleShow();\r\n      // window.scrollTo({ top: 0, behavior: 'smooth' });\r\n}\r\n  \r\n\r\n  return (\r\n  <>\r\n    <Modal show={show} onHide={handleClose} centered>\r\n      <Modal.Dialog>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Thank you for your submission</Modal.Title>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>\r\n          <p>Click through to see and contribute to others' ideas.</p>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>Close</Button>\r\n          <Button variant=\"primary\" href=\"/feedback\">Submissions</Button>\r\n        </Modal.Footer>\r\n      </Modal.Dialog> \r\n    </Modal>\r\n    <Wallpaper />\r\n      <div className=\"submission-content\">\r\n          \r\n      <div className=\"pretext-wrapper\"> \r\n        <h2 className=\"custom-heading\">Submission Form</h2>\r\n        <hr className=\"hr\" />\r\n        <p className=\"p-text\">Please submit your idea below. If you want some help, please check out our <a href=\"/submissions/example\" className=\"link-to-example\">example</a> idea for some guidance. Once your idea is submitted, it will be added to our database and displayed on the <a href=\"/submissions\" className=\"link-to-example\">submitted ideas</a> page. There, people will be able to add comments and questions.\r\n        </p>\r\n      </div>\r\n      </div>\r\n      <div className=\"form-container\">\r\n        <form className=\"submission-form\" onSubmit={handleSubmit}>\r\n          <div className=\"form-content-wrapper\">\r\n            <div className=\"form-group\">\r\n              <label >Submission Name (max 20 words)</label>\r\n              <input type=\"text\" className=\"form-control\" maxLength={130} placeholder=\"e.g. The Green Space\" required name=\"title\" onChange={handleInputText} value={submission.title}/>\r\n              <div className=\"invalid-feedback\">\r\n                Please choose a name of your submission.\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label >In a few sentences, please explain your idea (max 200 words)</label>\r\n              <textarea className=\"form-control text-area\" maxLength={3000} required name=\"description\" onChange={handleTextArea} value={submission.description}/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label >Who would benefit from your idea? (max 200 words)</label>\r\n              <textarea className=\"form-control text-area\" maxLength={3000} name=\"benefit\" onChange={handleTextArea} value={submission.benefit}></textarea>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label >How will your idea make a positive contribution to the Hyde park area? (max 200 words)</label>\r\n              <textarea className=\"form-control text-area\" maxLength={3000} name=\"contribution\" onChange={handleTextArea} value={submission.contribution}></textarea>\r\n            </div>          \r\n            <div className=\"form-group\">\r\n              <label >Are there any practical skills needed to implement your idea? (max 200 words)</label>\r\n              <textarea className=\"form-control text-area\" maxLength={3000} name=\"skills\" onChange={handleTextArea} value={submission.skills}></textarea>\r\n            </div>          \r\n            <div className=\"form-group\">\r\n              <label >Outline the rough costs for your idea - how will it fit into the £250 budget? (max 200 words)</label>\r\n              <label className=\"sub-label\">No need to be exact, just a rough estimate will do</label>\r\n              <textarea className=\"form-control text-area\" maxLength={3000} placeholder=\"\" name=\"costs\" onChange={handleTextArea} value={submission.costs}></textarea>\r\n            </div>          \r\n            <div className=\"form-group\">\r\n              <label >Will it need maintenance? If so, how might this happen? (max 200 words)</label>\r\n              <textarea className=\"form-control text-area\" maxLength={3000} name=\"maintenance\" onChange={handleTextArea} value={submission.maintenance}></textarea>\r\n            </div>          \r\n            <div className=\"form-group\">\r\n              <label >Is there anything else to consider? (max 200 words)</label>\r\n              <textarea className=\"form-control text-area\" maxLength={3000} name=\"other\" onChange={handleTextArea} value={submission.other}></textarea>\r\n            </div>   \r\n            \r\n          </div>\r\n          <div className=\"form-check\">\r\n            <label>Feel free to draw or add example images which might help us to imagine your idea </label>\r\n            <input type=\"file\" className=\"form-control-file\" name=\"image\" onChange={handleImage} id=\"fileInput\" multiple accept=\"image/*\" key={key || \"\"}/>\r\n          </div>\r\n            {loading ? (\r\n                <button className=\"btn btn-primary\" type=\"button\" disabled>\r\n                  <div className=\"spinner-border\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                  </div>\r\n                </button>\r\n              ) : \r\n                <button type=\"submit\" className=\"btn btn-primary\" >\r\n                  Submit\r\n                </button>\r\n            }\r\n        </form>\r\n      </div>\r\n    <Footer /> \r\n  </>\r\n  )\r\n};\r\nexport default Submission;\r\n","C:\\Users\\Johnson\\Documents\\mern\\CAW\\client\\src\\pages\\SingleSubmission\\SingleSubmission.tsx",["81","82"],"import React,  { useEffect, useState } from 'react';\r\nimport Footer from '../../components/Footer/Footer';\r\nimport Wallpaper from '../../components/Wallpaper/Wallpaper';\r\nimport ReceiveSubmissionType from '../../models/ReceiveSubmissionType';\r\nimport feedbackService from '../../services/feedbackService';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport CardCarousel from './components/CardCarousel';\r\n\r\ninterface MatchParams { \r\n    id: string;\r\n}\r\n\r\nconst SingleSubmission: React.FC<RouteComponentProps<MatchParams>> = (props) => {\r\n\r\n    const [submission, setSubmission] = useState<ReceiveSubmissionType>({\r\n      title: \"\",\r\n      description: \"\",\r\n      benefit: \"\",\r\n      contribution: \"\",\r\n      skills: \"\",\r\n      costs: \"\",\r\n      maintenance: \"\",\r\n      other: \"\",\r\n      image: [],\r\n      _id: \"\"\r\n    });\r\n\r\n    const submissionId = props.match.params.id;\r\n\r\n    console.log(submissionId)\r\n    \r\n    const fService = new feedbackService();\r\n\r\n    const fetchSubmission = () => {\r\n        fService.getSubmissionById(submissionId).then(response => setSubmission(response));\r\n    }\r\n\r\n    useEffect( fetchSubmission,  []);\r\n    \r\n  return (\r\n  <>\r\n    <Wallpaper />\r\n    <div className=\"content-wrapper\">\r\n        <h1 className=\"custom-heading\">Our Example Submission</h1>\r\n        <a className=\"btn btn-outline-success\" href=\"/feedback\">Back To Submissions</a>\r\n        <div className=\"container my-container\">\r\n          <div className=\"row my-row\">\r\n            <div className=\"col-sm my-col\">\r\n              <h3 className=\"\">{submission?.title}</h3>\r\n              <p className=\"heading\">In a few sentences, please explain your idea </p>\r\n              <p>{submission?.description}</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"row row-image\">\r\n            <div className=\"col-sm my-col\">\r\n              <p className=\"heading\">Feel free to draw or add images which might help us to imagine your idea </p>\r\n              <div className=\"carousel-wrapper\">\r\n                <p>image carousel</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row my-row\">\r\n            <div className=\"col-sm my-col\">\r\n              <p className=\"heading\">Who would benefit from your idea and why?</p>\r\n               <p>{submission?.benefit}</p> \r\n            </div>\r\n          </div>\r\n          <div className=\"row my-row\">\r\n            <div className=\"col-sm my-col\">\r\n              <p className=\"heading\">How will your idea make a positive contribution to the Hyde Park area?</p>\r\n              <p>{submission?.contribution}</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"row my-row\">\r\n            <div className=\"col-sm my-col\">\r\n              <p className=\"heading\">Are there any practical skills needed to implement your idea?</p>\r\n              <p>{submission?.skills}</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"row my-row\">\r\n            <div className=\"col-sm my-col\">\r\n              <p className=\"heading\">Outline the rough costs for your idea - how will it fit into the £250 budget?</p>\r\n              <p>{submission?.costs}</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"row my-row\">\r\n            <div className=\"col-sm my-col\">\r\n              <p className=\"heading\">Will your idea need maintenance? If so, how might this happen?</p>\r\n              <p>{submission?.maintenance}</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"row my-row\">\r\n            <div className=\"col-sm my-col\">\r\n              <p className=\"heading\">Is there anything else to consider for your idea?</p>\r\n              <p>{submission?.other}</p>\r\n            </div>\r\n          </div>\r\n\r\n      </div>\r\n    </div>\r\n\r\n    <Footer /> \r\n  </>\r\n  )\r\n};\r\nexport default SingleSubmission;\r\n","C:\\Users\\Johnson\\Documents\\mern\\CAW\\client\\src\\pages\\Submissions\\Submissions.tsx",["83","84","85","86"],"C:\\Users\\Johnson\\Documents\\mern\\CAW\\client\\src\\services\\submissionService.ts",[],"C:\\Users\\Johnson\\Documents\\mern\\CAW\\client\\src\\services\\feedbackService.ts",[],"C:\\Users\\Johnson\\Documents\\mern\\CAW\\client\\src\\components\\Footer\\Footer.tsx",["87","88"],"import React from 'react';\r\n\r\nconst Footer: React.FC = () => (\r\n    <div className=\"footer-basic\">\r\n        <footer>    \r\n            <div className=\"social\">\r\n                <a href=\"https://www.facebook.com/CommunityActionWaste\" target=\"_blank\">\r\n                    <i className=\"fab fa-facebook-f\" />\r\n                </a>\r\n            </div>\r\n            <ul className=\"list-inline\">\r\n                <li className=\"list-inline-item\"><a href=\"#\">Home</a></li>\r\n                <li className=\"list-inline-item\"><a href=\"/submission\">Submit An Idea</a></li>\r\n                <li className=\"list-inline-item\"><a href=\"/feedback\">Submitted Ideas</a></li>\r\n            </ul>\r\n            <p className=\"contact-us\">Contact Us:</p>\r\n\r\n            <ul className=\"list-inline\">\r\n                {/* <li className=\"list-inline-item\">Phone Lily: 07498577571</li> */}\r\n                <li className=\"list-inline-item\">Email: communityactionwaste@gmail.com</li>\r\n            </ul>\r\n            <p className=\"copyright\">Community Action On Waste © 2021</p>\r\n        </footer>\r\n    </div>\r\n);\r\n\r\nexport default Footer;\r\n","C:\\Users\\Johnson\\Documents\\mern\\CAW\\client\\src\\components\\Wallpaper\\Wallpaper.tsx",[],"C:\\Users\\Johnson\\Documents\\mern\\CAW\\client\\src\\components\\Header\\Header.tsx",[],"C:\\Users\\Johnson\\Documents\\mern\\CAW\\client\\src\\components\\Card\\Card.tsx",[],"C:\\Users\\Johnson\\Documents\\mern\\CAW\\client\\src\\services\\config.ts",["89"],"export default {\r\n    baseUrl: 'https://caw-server.herokuapp.com/api' // once the server is up online (on heroku), we'll need to update this. \r\n  };\r\n  ","C:\\Users\\Johnson\\Documents\\mern\\CAW\\client\\src\\components\\Modal\\CustomModal.tsx",[],{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":3,"column":8,"nodeType":"96","messageId":"97","endLine":3,"endColumn":19},{"ruleId":"94","severity":1,"message":"98","line":9,"column":10,"nodeType":"96","messageId":"97","endLine":9,"endColumn":27},{"ruleId":"99","severity":1,"message":"100","line":13,"column":20,"nodeType":"101","messageId":"102","endLine":13,"endColumn":41,"fix":"103"},{"ruleId":"104","severity":1,"message":"105","line":57,"column":5,"nodeType":"106","endLine":57,"endColumn":22,"suggestions":"107"},{"ruleId":"94","severity":1,"message":"108","line":7,"column":8,"nodeType":"96","messageId":"97","endLine":7,"endColumn":20},{"ruleId":"104","severity":1,"message":"109","line":38,"column":34,"nodeType":"106","endLine":38,"endColumn":36,"suggestions":"110"},{"ruleId":"99","severity":1,"message":"100","line":9,"column":20,"nodeType":"101","messageId":"102","endLine":9,"endColumn":39,"fix":"111"},{"ruleId":"104","severity":1,"message":"112","line":17,"column":6,"nodeType":"106","endLine":17,"endColumn":8,"suggestions":"113"},{"ruleId":"114","severity":1,"message":"115","line":49,"column":50,"nodeType":"116","messageId":"117","endLine":49,"endColumn":52},{"ruleId":"118","severity":1,"message":"119","line":57,"column":46,"nodeType":"120","messageId":"121","endLine":57,"endColumn":48},{"ruleId":"122","severity":1,"message":"123","line":7,"column":17,"nodeType":"124","endLine":7,"endColumn":89},{"ruleId":"125","severity":1,"message":"126","line":12,"column":50,"nodeType":"124","endLine":12,"endColumn":62},{"ruleId":"127","severity":1,"message":"128","line":1,"column":1,"nodeType":"129","endLine":3,"endColumn":5},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"@typescript-eslint/no-unused-vars","'CustomModal' is defined but never used.","Identifier","unusedVar","'setSourceMapRange' is defined but never used.","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"132","text":"133"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'sService'. Either include it or remove the dependency array.","ArrayExpression",["134"],"'CardCarousel' is defined but never used.","React Hook useEffect has missing dependencies: 'fService' and 'submissionId'. Either include them or remove the dependency array.",["135"],{"range":"136","text":"133"},"React Hook useEffect has a missing dependency: 'fetchSubmissions'. Either include it or remove the dependency array.",["137"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",[587,587],"()",{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},[433,433],{"desc":"142","fix":"143"},"Update the dependencies array to be: [finalSubmission, sService]",{"range":"144","text":"145"},"Update the dependencies array to be: [fService, submissionId]",{"range":"146","text":"147"},"Update the dependencies array to be: [fetchSubmissions]",{"range":"148","text":"149"},[1818,1835],"[finalSubmission, sService]",[1142,1144],"[fService, submissionId]",[692,694],"[fetchSubmissions]"]