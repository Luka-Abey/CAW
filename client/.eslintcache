[{"C:\\Users\\Johnson\\Documents\\mern\\CAW\\client\\src\\index.tsx":"1","C:\\Users\\Johnson\\Documents\\mern\\CAW\\client\\src\\App.tsx":"2","C:\\Users\\Johnson\\Documents\\mern\\CAW\\client\\src\\routes\\Routes.tsx":"3","C:\\Users\\Johnson\\Documents\\mern\\CAW\\client\\src\\routes\\RouteConstants.ts":"4","C:\\Users\\Johnson\\Documents\\mern\\CAW\\client\\src\\pages\\Home\\Home.tsx":"5","C:\\Users\\Johnson\\Documents\\mern\\CAW\\client\\src\\components\\Layout\\Layout.tsx":"6","C:\\Users\\Johnson\\Documents\\mern\\CAW\\client\\src\\pages\\FormSubmission\\FormSubmission.tsx":"7","C:\\Users\\Johnson\\Documents\\mern\\CAW\\client\\src\\pages\\SingleSubmission\\SingleSubmission.tsx":"8","C:\\Users\\Johnson\\Documents\\mern\\CAW\\client\\src\\pages\\Submissions\\Submissions.tsx":"9","C:\\Users\\Johnson\\Documents\\mern\\CAW\\client\\src\\services\\submissionService.ts":"10","C:\\Users\\Johnson\\Documents\\mern\\CAW\\client\\src\\services\\feedbackService.ts":"11","C:\\Users\\Johnson\\Documents\\mern\\CAW\\client\\src\\components\\Footer\\Footer.tsx":"12","C:\\Users\\Johnson\\Documents\\mern\\CAW\\client\\src\\components\\Wallpaper\\Wallpaper.tsx":"13","C:\\Users\\Johnson\\Documents\\mern\\CAW\\client\\src\\components\\Header\\Header.tsx":"14","C:\\Users\\Johnson\\Documents\\mern\\CAW\\client\\src\\components\\Card\\Card.tsx":"15","C:\\Users\\Johnson\\Documents\\mern\\CAW\\client\\src\\services\\config.ts":"16","C:\\Users\\Johnson\\Documents\\mern\\CAW\\client\\src\\components\\Modal\\CustomModal.tsx":"17","C:\\Users\\Johnson\\Documents\\mern\\CAW\\client\\src\\pages\\SingleSubmission\\components\\CommentSection.tsx":"18","C:\\Users\\Johnson\\Documents\\mern\\CAW\\client\\src\\services\\commentService.tsx":"19","C:\\Users\\Johnson\\Documents\\mern\\CAW\\client\\src\\pages\\SingleSubmission\\components\\NewComment.tsx":"20"},{"size":231,"mtime":1610918585809,"results":"21","hashOfConfig":"22"},{"size":149,"mtime":1610918585787,"results":"23","hashOfConfig":"22"},{"size":977,"mtime":1612804039107,"results":"24","hashOfConfig":"22"},{"size":190,"mtime":1612804039101,"results":"25","hashOfConfig":"22"},{"size":8614,"mtime":1612559114731,"results":"26","hashOfConfig":"22"},{"size":1220,"mtime":1611767652079,"results":"27","hashOfConfig":"22"},{"size":13212,"mtime":1613070286321,"results":"28","hashOfConfig":"22"},{"size":3996,"mtime":1612985262665,"results":"29","hashOfConfig":"22"},{"size":2587,"mtime":1612985262670,"results":"30","hashOfConfig":"22"},{"size":988,"mtime":1612640746747,"results":"31","hashOfConfig":"22"},{"size":1308,"mtime":1612804039113,"results":"32","hashOfConfig":"22"},{"size":1112,"mtime":1611607191376,"results":"33","hashOfConfig":"22"},{"size":304,"mtime":1611607191379,"results":"34","hashOfConfig":"22"},{"size":202,"mtime":1610918585791,"results":"35","hashOfConfig":"22"},{"size":1607,"mtime":1612804039069,"results":"36","hashOfConfig":"22"},{"size":152,"mtime":1612384968086,"results":"37","hashOfConfig":"22"},{"size":1048,"mtime":1612818661212,"results":"38","hashOfConfig":"22"},{"size":1290,"mtime":1612985262667,"results":"39","hashOfConfig":"22"},{"size":682,"mtime":1612985262671,"results":"40","hashOfConfig":"22"},{"size":2371,"mtime":1612985262668,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"gdb71q",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"62","usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"88","usedDeprecatedRules":"44"},"C:\\Users\\Johnson\\Documents\\mern\\CAW\\client\\src\\index.tsx",[],["89","90"],"C:\\Users\\Johnson\\Documents\\mern\\CAW\\client\\src\\App.tsx",[],"C:\\Users\\Johnson\\Documents\\mern\\CAW\\client\\src\\routes\\Routes.tsx",[],"C:\\Users\\Johnson\\Documents\\mern\\CAW\\client\\src\\routes\\RouteConstants.ts",[],"C:\\Users\\Johnson\\Documents\\mern\\CAW\\client\\src\\pages\\Home\\Home.tsx",[],"C:\\Users\\Johnson\\Documents\\mern\\CAW\\client\\src\\components\\Layout\\Layout.tsx",[],"C:\\Users\\Johnson\\Documents\\mern\\CAW\\client\\src\\pages\\FormSubmission\\FormSubmission.tsx",["91","92","93","94"],"C:\\Users\\Johnson\\Documents\\mern\\CAW\\client\\src\\pages\\SingleSubmission\\SingleSubmission.tsx",["95","96"],"import React,  { useEffect, useState } from 'react';\r\nimport Footer from '../../components/Footer/Footer';\r\nimport Wallpaper from '../../components/Wallpaper/Wallpaper';\r\nimport ReceiveSubmissionType from '../../models/ReceiveSubmissionType';\r\nimport feedbackService from '../../services/feedbackService';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport CardCarousel from './components/CardCarousel';\r\n\r\ninterface MatchParams { \r\n    id: string;\r\n}\r\n\r\nconst SingleSubmission: React.FC<RouteComponentProps<MatchParams>> = (props) => {\r\n\r\n    const [submission, setSubmission] = useState<ReceiveSubmissionType>({\r\n      title: \"\",\r\n      description: \"\",\r\n      benefit: \"\",\r\n      contribution: \"\",\r\n      skills: \"\",\r\n      costs: \"\",\r\n      maintenance: \"\",\r\n      other: \"\",\r\n      image: [],\r\n      _id: \"\"\r\n    });\r\n\r\n    const submissionId = props.match.params.id;\r\n    \r\n    const fService = new feedbackService();\r\n\r\n    const fetchSubmission = () => {\r\n        fService.getSubmissionById(submissionId).then(response => setSubmission(response));\r\n    }\r\n\r\n    useEffect( fetchSubmission,  []);\r\n    \r\n  return (\r\n  <>\r\n    <Wallpaper />\r\n    <div className=\"content-wrapper\">\r\n        <h1 className=\"custom-heading\">Our Example Submission</h1>\r\n        <a className=\"btn btn-outline-success\" href=\"/feedback\">Back To Submissions</a>\r\n        <div className=\"container my-container\">\r\n          <div className=\"row my-row\">\r\n            <div className=\"col-sm my-col\">\r\n              <h3 className=\"\">{submission?.title}</h3>\r\n              <p className=\"heading\">In a few sentences, please explain your idea </p>\r\n              <p>{submission?.description}</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"row row-image\">\r\n            <div className=\"col-sm my-col\">\r\n              <p className=\"heading\">Feel free to draw or add images which might help us to imagine your idea </p>\r\n              <div className=\"carousel-wrapper\">\r\n                <p>image carousel</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row my-row\">\r\n            <div className=\"col-sm my-col\">\r\n              <p className=\"heading\">Who would benefit from your idea and why?</p>\r\n               <p>{submission?.benefit}</p> \r\n            </div>\r\n          </div>\r\n          <div className=\"row my-row\">\r\n            <div className=\"col-sm my-col\">\r\n              <p className=\"heading\">How will your idea make a positive contribution to the Hyde Park area?</p>\r\n              <p>{submission?.contribution}</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"row my-row\">\r\n            <div className=\"col-sm my-col\">\r\n              <p className=\"heading\">Are there any practical skills needed to implement your idea?</p>\r\n              <p>{submission?.skills}</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"row my-row\">\r\n            <div className=\"col-sm my-col\">\r\n              <p className=\"heading\">Outline the rough costs for your idea - how will it fit into the £250 budget?</p>\r\n              <p>{submission?.costs}</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"row my-row\">\r\n            <div className=\"col-sm my-col\">\r\n              <p className=\"heading\">Will your idea need maintenance? If so, how might this happen?</p>\r\n              <p>{submission?.maintenance}</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"row my-row\">\r\n            <div className=\"col-sm my-col\">\r\n              <p className=\"heading\">Is there anything else to consider for your idea?</p>\r\n              <p>{submission?.other}</p>\r\n            </div>\r\n          </div>\r\n\r\n      </div>\r\n    </div>\r\n\r\n    <Footer /> \r\n  </>\r\n  )\r\n};\r\nexport default SingleSubmission;\r\n","C:\\Users\\Johnson\\Documents\\mern\\CAW\\client\\src\\pages\\Submissions\\Submissions.tsx",["97","98","99","100"],"import React, { useEffect, useState } from 'react';\r\nimport Footer from '../../components/Footer/Footer';\r\nimport Wallpaper from '../../components/Wallpaper/Wallpaper';\r\nimport FeedbackService from '../../services/feedbackService';\r\nimport ReceiveSubmissionType from '../../models/ReceiveSubmissionType';\r\nimport Card from '../../components/Card/Card';\r\nconst Feedback: React.FC = () => { \r\n  \r\n  const fService = new FeedbackService;\r\n  const [results, setResults] = useState(new Array<ReceiveSubmissionType>());\r\n  const [loading, setLoading] = useState(true);\r\n  const exampleSubmissionId = '602427dcd0cc890004c267cf'\r\n\r\n  // on load \r\n  useEffect(() => {\r\n      fetchSubmissions();\r\n  }, []);\r\n\r\n\r\n   const fetchSubmissions = async () => { \r\n      await fService.getSubmissions().then(response => {\r\n      setResults(response);\r\n      setLoading(false);\r\n    })\r\n  } \r\n\r\n\r\n  return (  \r\n  <>\r\n    <Wallpaper />\r\n\r\n    <div className=\"feedback-content\">\r\n        <h1>No ideas have been submitted Yet:</h1>\r\n        <h3>Please check back soon!</h3>\r\n      <hr/>\r\n    </div> \r\n\r\n    <ul className=\"submission-list\">\r\n      <Card \r\n        title=\"Example Idea: Communal Green with Seating\" \r\n        imageUrl=\"https://res.cloudinary.com/dura1eemm/image/upload/v1612961433/caw/igcefffzmdrgghcf05e4.png\" \r\n        description=\"Our idea is to create a communal green area with seating. It will have an L shaped wooden bench, with a raised bed in the corner for growing plants, flowers and herbs. Upcycled household items such a...\" \r\n        submissionId={exampleSubmissionId}/>\r\n      {loading ? (\r\n                  <div className=\"spinner-border\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                  </div>\r\n              ) : \r\n                results?.map((submission, index) => {\r\n                    if(submission._id !== exampleSubmissionId) {\r\n                      return (\r\n                        <Card \r\n                          key={index} \r\n                          title={submission.title} \r\n                          description={submission.description} \r\n                          imageUrl={\r\n                            submission.image == undefined || submission.image.length < 1 ? \"https://imgur.com/n5VyLq2.png\" : submission.image[0]\r\n                          } \r\n                          submissionId={submission._id} />\r\n                      )\r\n                    }\r\n                  }                  \r\n                )\r\n            }\r\n    </ul>\r\n\r\n    <Footer /> \r\n  </> \r\n  )\r\n};\r\n\r\nexport default Feedback;\r\n","C:\\Users\\Johnson\\Documents\\mern\\CAW\\client\\src\\services\\submissionService.ts",[],"C:\\Users\\Johnson\\Documents\\mern\\CAW\\client\\src\\services\\feedbackService.ts",[],"C:\\Users\\Johnson\\Documents\\mern\\CAW\\client\\src\\components\\Footer\\Footer.tsx",["101","102"],"import React from 'react';\r\n\r\nconst Footer: React.FC = () => (\r\n    <div className=\"footer-basic\">\r\n        <footer>    \r\n            <div className=\"social\">\r\n                <a href=\"https://www.facebook.com/CommunityActionWaste\" target=\"_blank\">\r\n                    <i className=\"fab fa-facebook-f\" />\r\n                </a>\r\n            </div>\r\n            <ul className=\"list-inline\">\r\n                <li className=\"list-inline-item\"><a href=\"#\">Home</a></li>\r\n                <li className=\"list-inline-item\"><a href=\"/submission\">Submit An Idea</a></li>\r\n                <li className=\"list-inline-item\"><a href=\"/feedback\">Submitted Ideas</a></li>\r\n            </ul>\r\n            <p className=\"contact-us\">Contact Us:</p>\r\n\r\n            <ul className=\"list-inline\">\r\n                {/* <li className=\"list-inline-item\">Phone Lily: 07498577571</li> */}\r\n                <li className=\"list-inline-item\">Email: communityactionwaste@gmail.com</li>\r\n            </ul>\r\n            <p className=\"copyright\">Community Action On Waste © 2021</p>\r\n        </footer>\r\n    </div>\r\n);\r\n\r\nexport default Footer;\r\n","C:\\Users\\Johnson\\Documents\\mern\\CAW\\client\\src\\components\\Wallpaper\\Wallpaper.tsx",[],"C:\\Users\\Johnson\\Documents\\mern\\CAW\\client\\src\\components\\Header\\Header.tsx",[],"C:\\Users\\Johnson\\Documents\\mern\\CAW\\client\\src\\components\\Card\\Card.tsx",[],"C:\\Users\\Johnson\\Documents\\mern\\CAW\\client\\src\\services\\config.ts",["103"],"export default {\r\n    baseUrl: 'https://caw-server.herokuapp.com/api' // once the server is up online (on heroku), we'll need to update this. \r\n  };\r\n  ","C:\\Users\\Johnson\\Documents\\mern\\CAW\\client\\src\\components\\Modal\\CustomModal.tsx",[],"C:\\Users\\Johnson\\Documents\\mern\\CAW\\client\\src\\pages\\SingleSubmission\\components\\CommentSection.tsx",["104"],"import React, { useState, useEffect } from 'react';\r\nimport CommentService from '../../../services/commentService';\r\nimport CommentType from '../../../models/CommentType';\r\n\r\ninterface MatchParams { \r\n  id: string;\r\n}\r\n\r\nconst CommentSection: React.FC<MatchParams> = (props) => {\r\n  const cService = new CommentService();\r\n  const submissionId = props.id;\r\n  const [results, setResults] = useState(new Array<CommentType>());\r\n  \r\n  useEffect(() => {\r\n    fetchSubmissionComments();\r\n  }, []);\r\n  \r\n  const fetchSubmissionComments = async () => { \r\n    await cService.getCommentsBySubmission(submissionId).then(response => {\r\n    setResults(response);\r\n  })\r\n} \r\n\r\n  return (\r\n    <>\r\n      <div className=\"content-wrapper\">\r\n        <div className=\"container my-container\">\r\n        <h1 className=\"custom-heading\">Comments</h1>\r\n          {\r\n            results?.map((comment, index) => (\r\n            <div className=\"row my-row\">\r\n              <div className=\"col-sm my-col\">\r\n                <p>{comment.user}</p>\r\n                <small>{comment.date}</small>\r\n                <br/>\r\n                <p className=\"mb-1\">{comment.commentBody}</p>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n};\r\n\r\nexport default CommentSection;\r\n","C:\\Users\\Johnson\\Documents\\mern\\CAW\\client\\src\\services\\commentService.tsx",[],"C:\\Users\\Johnson\\Documents\\mern\\CAW\\client\\src\\pages\\SingleSubmission\\components\\NewComment.tsx",["105","106","107"],"import React,  { useEffect, useState } from 'react';\r\nimport commentService from '../../../services/commentService';\r\nimport CommentType from '../../../models/CommentType';\r\nimport { setSourceMapRange } from 'typescript';\r\n\r\ninterface MatchParams { \r\n  id: string;\r\n}\r\n\r\nconst NewComment: React.FC<MatchParams> = (props) => {\r\n  const submissionId = props.id;\r\n  const cService = new commentService;\r\n  const [loading, setLoading] = useState(false)\r\n  const [comment, setComment] = useState<CommentType>({\r\n    commentBody: \"\",\r\n    submission: submissionId,\r\n    user: \"\"\r\n  });\r\n  \r\n  // nice-to-have show filenames when selected + a way to remove a file. \r\n  const handleInputText = (e: React.FormEvent<HTMLInputElement>) => {\r\n    const {value, name} = e.currentTarget;  \r\n    setComment({ ...comment, [name]: value});\r\n  }\r\n\r\n  // validate submissions & send off the submission.\r\n  const handleSubmit = async (e: React.FormEvent<EventTarget>) => { \r\n    e.preventDefault();\r\n    setLoading(true)\r\n    cService.postComment(comment)\r\n    setLoading(false)\r\n    // re-render component here... then comment will instantly come up\r\n}\r\n  \r\n  return (\r\n  <>\r\n      <div className=\"form-container\">\r\n        <form className=\"submission-form\" onSubmit={handleSubmit}>\r\n          <div className=\"form-content-wrapper\">\r\n            <div className=\"form-group\">\r\n              <label >Name</label>\r\n              <input type=\"text\" className=\"form-control\" maxLength={130} required name=\"user\" onChange={handleInputText} value={comment.user} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label >Comment</label>\r\n              <input type=\"text\" className=\"form-control text-area\" maxLength={3000} required name=\"commentBody\" onChange={handleInputText} value={comment.commentBody} />\r\n            </div>\r\n           </div>\r\n            {loading ? (\r\n                <button className=\"btn btn-primary\" type=\"button\" disabled>\r\n                  <div className=\"spinner-border\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                  </div>\r\n                </button>\r\n              ) : \r\n                <button type=\"submit\" className=\"btn btn-primary\" >\r\n                  Submit\r\n                </button>\r\n            }\r\n        </form>\r\n      </div>\r\n  </>\r\n  )\r\n};\r\nexport default NewComment;\r\n",{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":3,"column":8,"nodeType":"114","messageId":"115","endLine":3,"endColumn":19},{"ruleId":"112","severity":1,"message":"116","line":10,"column":10,"nodeType":"114","messageId":"115","endLine":10,"endColumn":27},{"ruleId":"117","severity":1,"message":"118","line":14,"column":20,"nodeType":"119","messageId":"120","endLine":14,"endColumn":41,"fix":"121"},{"ruleId":"122","severity":1,"message":"123","line":71,"column":5,"nodeType":"124","endLine":71,"endColumn":22,"suggestions":"125"},{"ruleId":"112","severity":1,"message":"126","line":7,"column":8,"nodeType":"114","messageId":"115","endLine":7,"endColumn":20},{"ruleId":"122","severity":1,"message":"127","line":37,"column":34,"nodeType":"124","endLine":37,"endColumn":36,"suggestions":"128"},{"ruleId":"117","severity":1,"message":"118","line":9,"column":20,"nodeType":"119","messageId":"120","endLine":9,"endColumn":39,"fix":"129"},{"ruleId":"122","severity":1,"message":"130","line":17,"column":6,"nodeType":"124","endLine":17,"endColumn":8,"suggestions":"131"},{"ruleId":"132","severity":1,"message":"133","line":49,"column":50,"nodeType":"134","messageId":"135","endLine":49,"endColumn":52},{"ruleId":"136","severity":1,"message":"137","line":57,"column":46,"nodeType":"138","messageId":"139","endLine":57,"endColumn":48},{"ruleId":"140","severity":1,"message":"141","line":7,"column":17,"nodeType":"142","endLine":7,"endColumn":89},{"ruleId":"143","severity":1,"message":"144","line":12,"column":50,"nodeType":"142","endLine":12,"endColumn":62},{"ruleId":"145","severity":1,"message":"146","line":1,"column":1,"nodeType":"147","endLine":3,"endColumn":5},{"ruleId":"122","severity":1,"message":"148","line":16,"column":6,"nodeType":"124","endLine":16,"endColumn":8,"suggestions":"149"},{"ruleId":"112","severity":1,"message":"150","line":1,"column":18,"nodeType":"114","messageId":"115","endLine":1,"endColumn":27},{"ruleId":"112","severity":1,"message":"116","line":4,"column":10,"nodeType":"114","messageId":"115","endLine":4,"endColumn":27},{"ruleId":"117","severity":1,"message":"118","line":12,"column":20,"nodeType":"119","messageId":"120","endLine":12,"endColumn":38,"fix":"151"},"no-native-reassign",["152"],"no-negated-in-lhs",["153"],"@typescript-eslint/no-unused-vars","'CustomModal' is defined but never used.","Identifier","unusedVar","'setSourceMapRange' is defined but never used.","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"154","text":"155"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'sService'. Either include it or remove the dependency array.","ArrayExpression",["156"],"'CardCarousel' is defined but never used.","React Hook useEffect has missing dependencies: 'fService' and 'submissionId'. Either include them or remove the dependency array.",["157"],{"range":"158","text":"155"},"React Hook useEffect has a missing dependency: 'fetchSubmissions'. Either include it or remove the dependency array.",["159"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has a missing dependency: 'fetchSubmissionComments'. Either include it or remove the dependency array.",["160"],"'useEffect' is defined but never used.",{"range":"161","text":"155"},"no-global-assign","no-unsafe-negation",[629,629],"()",{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},[433,433],{"desc":"166","fix":"167"},{"desc":"168","fix":"169"},[398,398],"Update the dependencies array to be: [finalSubmission, sService]",{"range":"170","text":"171"},"Update the dependencies array to be: [fService, submissionId]",{"range":"172","text":"173"},"Update the dependencies array to be: [fetchSubmissions]",{"range":"174","text":"175"},"Update the dependencies array to be: [fetchSubmissionComments]",{"range":"176","text":"177"},[2099,2116],"[finalSubmission, sService]",[1213,1215],"[fService, submissionId]",[692,694],"[fetchSubmissions]",[488,490],"[fetchSubmissionComments]"]