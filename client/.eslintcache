[{"C:\\Users\\rsaha\\Desktop\\C.A.W\\website\\community-action-on-waste\\client\\src\\index.tsx":"1","C:\\Users\\rsaha\\Desktop\\C.A.W\\website\\community-action-on-waste\\client\\src\\App.tsx":"2","C:\\Users\\rsaha\\Desktop\\C.A.W\\website\\community-action-on-waste\\client\\src\\routes\\Routes.tsx":"3","C:\\Users\\rsaha\\Desktop\\C.A.W\\website\\community-action-on-waste\\client\\src\\routes\\RouteConstants.ts":"4","C:\\Users\\rsaha\\Desktop\\C.A.W\\website\\community-action-on-waste\\client\\src\\components\\Layout\\Layout.tsx":"5","C:\\Users\\rsaha\\Desktop\\C.A.W\\website\\community-action-on-waste\\client\\src\\pages\\Feedback\\Feedback.tsx":"6","C:\\Users\\rsaha\\Desktop\\C.A.W\\website\\community-action-on-waste\\client\\src\\pages\\Home\\Home.tsx":"7","C:\\Users\\rsaha\\Desktop\\C.A.W\\website\\community-action-on-waste\\client\\src\\pages\\Submission\\Submission.tsx":"8","C:\\Users\\rsaha\\Desktop\\C.A.W\\website\\community-action-on-waste\\client\\src\\services\\feedbackService.ts":"9","C:\\Users\\rsaha\\Desktop\\C.A.W\\website\\community-action-on-waste\\client\\src\\components\\Footer\\Footer.tsx":"10","C:\\Users\\rsaha\\Desktop\\C.A.W\\website\\community-action-on-waste\\client\\src\\components\\Header\\Header.tsx":"11","C:\\Users\\rsaha\\Desktop\\C.A.W\\website\\community-action-on-waste\\client\\src\\components\\Wallpaper\\Wallpaper.tsx":"12","C:\\Users\\rsaha\\Desktop\\C.A.W\\website\\community-action-on-waste\\client\\src\\services\\submissionService.ts":"13","C:\\Users\\rsaha\\Desktop\\C.A.W\\website\\community-action-on-waste\\client\\src\\services\\config.ts":"14","C:\\Users\\rsaha\\Desktop\\C.A.W\\website\\community-action-on-waste\\client\\src\\components\\Card\\Card.tsx":"15"},{"size":231,"mtime":1610758278756,"results":"16","hashOfConfig":"17"},{"size":149,"mtime":1610758278744,"results":"18","hashOfConfig":"17"},{"size":785,"mtime":1611531434139,"results":"19","hashOfConfig":"17"},{"size":146,"mtime":1611515492209,"results":"20","hashOfConfig":"17"},{"size":1220,"mtime":1611774907562,"results":"21","hashOfConfig":"17"},{"size":1446,"mtime":1612645343759,"results":"22","hashOfConfig":"17"},{"size":8614,"mtime":1612627556624,"results":"23","hashOfConfig":"17"},{"size":7578,"mtime":1612644221415,"results":"24","hashOfConfig":"17"},{"size":1051,"mtime":1612640672537,"results":"25","hashOfConfig":"17"},{"size":1112,"mtime":1611531236393,"results":"26","hashOfConfig":"17"},{"size":202,"mtime":1610758278747,"results":"27","hashOfConfig":"17"},{"size":304,"mtime":1611531932707,"results":"28","hashOfConfig":"17"},{"size":988,"mtime":1612640672539,"results":"29","hashOfConfig":"17"},{"size":152,"mtime":1612105882880,"results":"30","hashOfConfig":"17"},{"size":1441,"mtime":1612645617940,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"ftiean",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\rsaha\\Desktop\\C.A.W\\website\\community-action-on-waste\\client\\src\\index.tsx",[],["67","68"],"C:\\Users\\rsaha\\Desktop\\C.A.W\\website\\community-action-on-waste\\client\\src\\App.tsx",[],"C:\\Users\\rsaha\\Desktop\\C.A.W\\website\\community-action-on-waste\\client\\src\\routes\\Routes.tsx",[],"C:\\Users\\rsaha\\Desktop\\C.A.W\\website\\community-action-on-waste\\client\\src\\routes\\RouteConstants.ts",[],"C:\\Users\\rsaha\\Desktop\\C.A.W\\website\\community-action-on-waste\\client\\src\\components\\Layout\\Layout.tsx",[],"C:\\Users\\rsaha\\Desktop\\C.A.W\\website\\community-action-on-waste\\client\\src\\pages\\Feedback\\Feedback.tsx",["69","70","71","72"],"import React, { useEffect, useState } from 'react';\r\nimport Footer from '../../components/Footer/Footer';\r\nimport Wallpaper from '../../components/Wallpaper/Wallpaper';\r\nimport FeedbackService from '../../services/feedbackService';\r\nimport ReceiveSubmissionType from '../../models/ReceiveSubmissionType';\r\nimport Card from '../../components/Card/Card';\r\nconst Feedback: React.FC = () => { \r\n  \r\n  const fService = new FeedbackService;\r\n  const [results, setResults] = useState(new Array<ReceiveSubmissionType>());\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // on load \r\n  useEffect(() => {\r\n      fetchSubmissions();\r\n  }, []);\r\n\r\n\r\n   const fetchSubmissions = async () => { \r\n      await fService.getSubmissions().then(response => {\r\n      setResults(response);\r\n      setLoading(false);\r\n    })\r\n  } \r\n\r\n\r\n  return (  \r\n  <>\r\n    <Wallpaper />\r\n    <div className=\"feedback-content\">\r\n        <h1>No ideas have been submitted Yet:</h1>\r\n        <h3>Please check back soon!</h3>\r\n      <hr/>\r\n    </div> \r\n\r\n    <ul className=\"submission-list\">\r\n      {\r\n      results?.map((submission, index) => \r\n        <Card key={index} title={submission.title} description={submission.description} imageUrl={submission.image == undefined || submission.image.length < 1 ?  \"https://imgur.com/n5VyLq2.png\" : submission.image[0]} submissionId={submission._id}/>\r\n      )}\r\n    </ul>\r\n\r\n    <Footer /> \r\n  </> \r\n  )\r\n};\r\n\r\nexport default Feedback;\r\n","C:\\Users\\rsaha\\Desktop\\C.A.W\\website\\community-action-on-waste\\client\\src\\pages\\Home\\Home.tsx",[],"C:\\Users\\rsaha\\Desktop\\C.A.W\\website\\community-action-on-waste\\client\\src\\pages\\Submission\\Submission.tsx",["73","74","75","76","77"],"import React,  { useEffect, useState } from 'react';\r\nimport Footer from '../../components/Footer/Footer';\r\nimport Wallpaper from '../../components/Wallpaper/Wallpaper';\r\nimport submissionService from '../../services/submissionService';\r\nimport SendSubmissionType from '../../models/SendSubmissionType';\r\nimport { setSourceMapRange } from 'typescript';\r\n\r\nconst Submission: React.FC = () => {\r\n\r\n  const sService = new submissionService;\r\n\r\n  const [loading, setLoading] = useState(false)\r\n  const [imageArray, setImageArray] = useState(new Array<String>());\r\n  const [urlArray, setUrlArray] = useState(new Array<string>());\r\n  const [key, setKey] = useState(\"\");\r\n  const [submission, setSubmission] = useState<SendSubmissionType>({\r\n    title: \"\",\r\n    description: \"\",\r\n    benefit: \"\",\r\n    contribution: \"\",\r\n    skills: \"\",\r\n    costs: \"\",\r\n    maintenance: \"\",\r\n    other: \"\",\r\n    image: []\r\n  });\r\n\r\n  const [finalSubmission, setFinalSubmission] = useState<SendSubmissionType>({\r\n    title: \"\",\r\n    description: \"\",\r\n    benefit: \"\",\r\n    contribution: \"\",\r\n    skills: \"\",\r\n    costs: \"\",\r\n    maintenance: \"\",\r\n    other: \"\",\r\n    image: []\r\n  });\r\n\r\n  // Get triggered when finalSubmssion state is changed, which only happens in handleSubmit function.\r\n  // Need more rigorous error handling.\r\n  useEffect(() => {\r\n    if (finalSubmission.title !== \"\") { \r\n      sService.postSubmission(finalSubmission).catch(e => console.log(\"something went wrong: \" + e));\r\n    }\r\n }, [finalSubmission]);\r\n  \r\n  // nice-to-have show filenames when selected + a way to remove a file. \r\n  const handleInputText = (e: React.FormEvent<HTMLInputElement>) => {\r\n    const {value, name} = e.currentTarget;  \r\n    setSubmission({ ...submission, [name]: value});\r\n  }\r\n\r\n  const handleTextArea = (e: React.ChangeEvent<HTMLTextAreaElement>) => { \r\n    const {value, name} = e.currentTarget;  \r\n    setSubmission({ ...submission, [name]: value});\r\n  }\r\n\r\n  // upload files to cloudinary, return url\r\n  const uploadFile = async (file: any): Promise<string> => {\r\n    const cloudinaryData = new FormData();\r\n    cloudinaryData.append('file', file);\r\n    cloudinaryData.append('upload_preset', 'communityactiononwaste');\r\n    // send off image file\r\n    const resCloudinary = await fetch(\r\n      'https://api.cloudinary.com/v1_1/dura1eemm/image/upload',\r\n      {\r\n        method: 'POST',\r\n        body: cloudinaryData\r\n      }\r\n    )\r\n    // retrieve url\r\n    const URL = await resCloudinary.json()\r\n    const imageURL = URL.secure_url \r\n\r\n    // store the url(s) in a state variable\r\n    let tempArray = urlArray;\r\n    tempArray.push(imageURL);\r\n    setUrlArray(tempArray); \r\n    return \"done\";\r\n  }\r\n\r\n  // (e: React.ChangeEvent<HTMLInputElement>) was not working... using e: any for now\r\n  const handleImage = async (e: any) => {\r\n    setImageArray(e.target.files);\r\n  }\r\n  \r\n  const resetImage = () => { \r\n    let randomString = Math.random().toString(36);\r\n    setKey( randomString);\r\n  }\r\n\r\n  // validate submissions & send off the submission.\r\n  const handleSubmit = async (e: React.FormEvent<EventTarget>) => { \r\n    e.preventDefault();\r\n    \r\n    for (let index = 0; index < imageArray.length; index++) {\r\n      await uploadFile(imageArray[index]);\r\n    }\r\n\r\n    // Once react finishes updating this state, it triggers a POST request in the useEffect()\r\n    setFinalSubmission(\r\n      {\r\n        title: submission.title,\r\n        description: submission.description,\r\n        benefit: submission.benefit,\r\n        contribution: submission.contribution,\r\n        skills: submission.skills,\r\n        costs: submission.costs,\r\n        maintenance: submission.maintenance,\r\n        other: submission.other,\r\n        image: urlArray\r\n      });\r\n\r\n    setSubmission(\r\n      {\r\n      title: \"\",\r\n      description: \"\",\r\n      benefit: \"\",\r\n      contribution: \"\",\r\n      skills: \"\",\r\n      costs: \"\",\r\n      maintenance: \"\",\r\n      other: \"\",\r\n      image: []\r\n      }); \r\n      \r\n      resetImage();\r\n}\r\n  \r\n\r\n  return (\r\n  <>\r\n    <Wallpaper />\r\n      <div className=\"submission-content\">\r\n          <h1>Submission Form Coming Soon</h1>\r\n          <h2>Please check back later this week!</h2>\r\n      </div>\r\n      <div className=\"form-container\">\r\n        <form className=\"submission-form\" onSubmit={handleSubmit}>\r\n          <div className=\"form-content-wrapper\">\r\n            <div className=\"form-group\">\r\n              <label >Submission Name</label>\r\n              <input type=\"text\" className=\"form-control\" placeholder=\"e.g. The Green Space\" required name=\"title\" onChange={handleInputText} value={submission.title}/>\r\n              <div className=\"invalid-feedback\">\r\n                Please choose a name of your submission.\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label >In a few sentences, please explain your idea</label>\r\n              <textarea className=\"form-control text-area\" required name=\"description\" onChange={handleTextArea} value={submission.description}/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label >Who would benefit from your idea?</label>\r\n              <textarea className=\"form-control text-area\" name=\"benefit\" onChange={handleTextArea} value={submission.benefit}></textarea>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label >How will your idea make a positive contribution to the Hyde park area?</label>\r\n              <textarea className=\"form-control text-area\" name=\"contribution\" onChange={handleTextArea} value={submission.contribution}></textarea>\r\n            </div>          \r\n            <div className=\"form-group\">\r\n              <label >Are there any practical skills needed to implement your idea?</label>\r\n              <textarea className=\"form-control text-area\" name=\"skills\" onChange={handleTextArea} value={submission.skills}></textarea>\r\n            </div>          \r\n            <div className=\"form-group\">\r\n              <label >Outline the rough costs for your idea - how will it fit into the £250 budget?</label>\r\n              <label className=\"sub-label\">No need to be exact, just a rough estimate will do</label>\r\n              <textarea className=\"form-control text-area\" placeholder=\"\" name=\"costs\" onChange={handleTextArea} value={submission.costs}></textarea>\r\n            </div>          \r\n            <div className=\"form-group\">\r\n              <label >Will it need maintenance? If so, how might this happen?</label>\r\n              <textarea className=\"form-control text-area\" name=\"maintenance\" onChange={handleTextArea} value={submission.maintenance}></textarea>\r\n            </div>          \r\n            <div className=\"form-group\">\r\n              <label >Is there anything else to consider?</label>\r\n              <textarea className=\"form-control text-area\" name=\"other\" onChange={handleTextArea} value={submission.other}></textarea>\r\n            </div>   \r\n            \r\n          </div>\r\n          <div className=\"form-check\">\r\n            <label>Feel free to draw or add example images which might help us to imagine your idea </label>\r\n\r\n            <input type=\"file\" className=\"form-control-file\" name=\"image\" onChange={handleImage} id=\"fileInput\" multiple accept=\"image/*\" key={key || \"\"}/>\r\n          </div>\r\n          <div>\r\n            {loading ? (<h3>Loading image...</h3>) : <h3/>}\r\n          </div>\r\n          <button type=\"submit\" className=\"btn btn-primary\" >Submit</button>\r\n        </form>\r\n      </div>\r\n    <Footer /> \r\n  </>\r\n  )\r\n};\r\nexport default Submission;\r\n","C:\\Users\\rsaha\\Desktop\\C.A.W\\website\\community-action-on-waste\\client\\src\\services\\feedbackService.ts",[],"C:\\Users\\rsaha\\Desktop\\C.A.W\\website\\community-action-on-waste\\client\\src\\components\\Footer\\Footer.tsx",["78","79"],"import React from 'react';\r\n\r\nconst Footer: React.FC = () => (\r\n    <div className=\"footer-basic\">\r\n        <footer>    \r\n            <div className=\"social\">\r\n                <a href=\"https://www.facebook.com/CommunityActionWaste\" target=\"_blank\">\r\n                    <i className=\"fab fa-facebook-f\" />\r\n                </a>\r\n            </div>\r\n            <ul className=\"list-inline\">\r\n                <li className=\"list-inline-item\"><a href=\"#\">Home</a></li>\r\n                <li className=\"list-inline-item\"><a href=\"/submission\">Submit An Idea</a></li>\r\n                <li className=\"list-inline-item\"><a href=\"/feedback\">Submitted Ideas</a></li>\r\n            </ul>\r\n            <p className=\"contact-us\">Contact Us:</p>\r\n\r\n            <ul className=\"list-inline\">\r\n                {/* <li className=\"list-inline-item\">Phone Lily: 07498577571</li> */}\r\n                <li className=\"list-inline-item\">Email: communityactionwaste@gmail.com</li>\r\n            </ul>\r\n            <p className=\"copyright\">Community Action On Waste © 2021</p>\r\n        </footer>\r\n    </div>\r\n);\r\n\r\nexport default Footer;\r\n","C:\\Users\\rsaha\\Desktop\\C.A.W\\website\\community-action-on-waste\\client\\src\\components\\Header\\Header.tsx",[],"C:\\Users\\rsaha\\Desktop\\C.A.W\\website\\community-action-on-waste\\client\\src\\components\\Wallpaper\\Wallpaper.tsx",[],"C:\\Users\\rsaha\\Desktop\\C.A.W\\website\\community-action-on-waste\\client\\src\\services\\submissionService.ts",[],"C:\\Users\\rsaha\\Desktop\\C.A.W\\website\\community-action-on-waste\\client\\src\\services\\config.ts",["80"],"export default {\r\n    baseUrl: 'https://caw-server.herokuapp.com/api' // once the server is up online (on heroku), we'll need to update this. \r\n  };\r\n  ","C:\\Users\\rsaha\\Desktop\\C.A.W\\website\\community-action-on-waste\\client\\src\\components\\Card\\Card.tsx",["81","82"],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":9,"column":20,"nodeType":"89","messageId":"90","endLine":9,"endColumn":39,"fix":"91"},{"ruleId":"92","severity":1,"message":"93","line":11,"column":10,"nodeType":"94","messageId":"95","endLine":11,"endColumn":17},{"ruleId":"96","severity":1,"message":"97","line":16,"column":6,"nodeType":"98","endLine":16,"endColumn":8,"suggestions":"99"},{"ruleId":"100","severity":1,"message":"101","line":39,"column":116,"nodeType":"102","messageId":"103","endLine":39,"endColumn":118},{"ruleId":"92","severity":1,"message":"104","line":6,"column":10,"nodeType":"94","messageId":"95","endLine":6,"endColumn":27},{"ruleId":"87","severity":1,"message":"88","line":10,"column":20,"nodeType":"89","messageId":"90","endLine":10,"endColumn":41,"fix":"105"},{"ruleId":"92","severity":1,"message":"106","line":12,"column":19,"nodeType":"94","messageId":"95","endLine":12,"endColumn":29},{"ruleId":"96","severity":1,"message":"107","line":46,"column":5,"nodeType":"98","endLine":46,"endColumn":22,"suggestions":"108"},{"ruleId":"109","severity":1,"message":"110","line":186,"column":54,"nodeType":"111","endLine":186,"endColumn":59},{"ruleId":"112","severity":1,"message":"113","line":7,"column":17,"nodeType":"111","endLine":7,"endColumn":89},{"ruleId":"114","severity":1,"message":"115","line":12,"column":50,"nodeType":"111","endLine":12,"endColumn":62},{"ruleId":"116","severity":1,"message":"117","line":1,"column":1,"nodeType":"118","endLine":3,"endColumn":5},{"ruleId":"92","severity":1,"message":"119","line":2,"column":17,"nodeType":"94","messageId":"95","endLine":2,"endColumn":25},{"ruleId":"114","severity":1,"message":"120","line":31,"column":67,"nodeType":"111","endLine":31,"endColumn":106},"no-native-reassign",["121"],"no-negated-in-lhs",["122"],"new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"123","text":"124"},"@typescript-eslint/no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchSubmissions'. Either include it or remove the dependency array.","ArrayExpression",["125"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'setSourceMapRange' is defined but never used.",{"range":"126","text":"124"},"'setLoading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'sService'. Either include it or remove the dependency array.",["127"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'useState' is defined but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",[433,433],"()",{"desc":"128","fix":"129"},[436,436],{"desc":"130","fix":"131"},"Update the dependencies array to be: [fetchSubmissions]",{"range":"132","text":"133"},"Update the dependencies array to be: [finalSubmission, sService]",{"range":"134","text":"135"},[634,636],"[fetchSubmissions]",[1484,1501],"[finalSubmission, sService]"]